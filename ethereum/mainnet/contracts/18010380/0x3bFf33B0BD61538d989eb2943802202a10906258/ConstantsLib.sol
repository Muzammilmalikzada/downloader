// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

library ConstantsLib {
    // mint params
    uint256 internal constant MINT_PRICE = 0.5 ether;
    uint256 internal constant ALLOWLSIT_MINT_PRICE = 0.25 ether;

    uint256 internal constant MAX_TICKETS = 20000;
    uint256 internal constant MIN_COMMITMENT_BLOCKS = 4;
    uint256 internal constant MAX_COMMITMENT_BLOCKS = 100;
    uint256 internal constant SPECIAL_TICKETS_COUNT = 10;
    uint256 internal constant SPECIAL_TICKET_MINT_ODDS = 1000;

    // access control
    bytes32 internal constant KEEPERS_TERMS_OPERATOR = keccak256("KEEPERS_TERMS_OPERATOR");
    bytes32 internal constant KEEPERS_LICENSE_OPERATOR = keccak256("KEEPERS_LICENSE_OPERATOR");
    bytes32 internal constant KEEPERS_MINT_OPERATOR = keccak256("KEEPERS_MINT_OPERATOR");

    // token states
    uint256 internal constant TOKEN_STATE_UNCONVERTED = 0;
    uint256 internal constant TOKEN_STATE_USER_CONVERTED = 1;
    uint256 internal constant TOKEN_STATE_ADMIN_CONVERTED = 2;

    // room naming
    uint256 internal constant NO_ROOM_NAMING_RIGHTS = 0;
    uint256 internal constant MAX_ROOM_NAME_LENGTH = 40;
    uint256 internal constant MIN_ROOM_ID = 1;

    // traits
    uint256 internal constant MIN_TRAIT_ID = 1;
    uint256 internal constant MAX_TRAIT_ID = 242;

    uint256 internal constant BLACK_BODY_ID = 1;
    uint256 internal constant GLASS_BODY_ID = 10;
    uint256 internal constant MAX_NON_SPECIAL_BODY_ID = 9;

    // rarities
    // bitmap for ultra rare traits 0000001111100000000000111001101110000000000000000100010000001111100000000000000000000000000000000000000000011100000000000000000000100000000000000000000011101010001000000000000000010000000000000000000000000000000000000000000000000000000000001110000000000000
    uint256 internal constant RARITY_ULTRARARE =
        1752737185771013737644568005558321144114900560241663114319964015025618739200;
    // bitmap for rare traits 0011100000000000000111000000000000000000000000000001100111110000000000000000000000000000000000001000000111100000000000000000010010000001000000000000111100010101110000000000001000100100000000000000000000000000000000000101000001000000111111110000000000000000
    uint256 internal constant RARITY_RARE =
        25329712769560669564647724112116350647150594218874243813999282872231118438400;
    // bitmap for uncommon traits 0000010000000100010000000110010000000000000000001010000000000000000000000000000000000000000001010001111000000000000000000000000001010100001111111111000000000000000100001000110111001000000000000000000000000000000000001010111100110111000000000000000000000000
    uint256 internal constant RARITY_UNCOMMON =
        1816763190353297512045086567763279289688669177570068147176572168506815021056;
    // bitmap for common traits 0100000000011011101000000000000001111111111111110000001000000000011111111111111111111111111110100110000000000011111111111111101100001010110000000000000000000000000011110111000000000011111111111111111111111111111111110000000010001000000000000000000000000000
    uint256 internal constant RARITY_COMMON =
        28996831472973116897448113818906002845680828376134306944232972948193012613120;

    // misc
    uint256 internal constant EMPTY_BITMAP = 0;
    string internal constant WHERE_TO_FIND_TERMS =
        "Terms and conditions can be found by calling getTerms() on the Keepers contract.";
}
